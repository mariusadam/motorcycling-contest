group 'com.ubb.mpp.server'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

repositories {
    mavenCentral()
}

def grpcVersion = '1.3.0' // CURRENT_GRPC_VERSION


dependencies {compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"

    compile group: 'mysql', name: 'mysql-connector-java', version:'6.0.5'
    compile 'org.springframework:spring-context:4.3.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '4.3.7.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-validator-annotation-processor', version: '4.1.0.Final'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    compile 'com.rabbitmq:amqp-client:4.1.0'

    compile project (':model')
    compile project (':persistence')

    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

idea {
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}


// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false

task motoContestServer(type: CreateStartScripts) {
    mainClassName = 'com.ubb.mpp.server.MotoContestServer'
    applicationName = 'moto-contest-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task motoContestClient(type: CreateStartScripts) {
    mainClassName = 'com.ubb.mpp.server.MotoContestClient'
    applicationName = 'moto-contest-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(motoContestServer)
    from(motoContestClient)
    fileMode = 0755
}